const express = require('express');
const bodyParser = require('body-parser');
const { MongoClient } = require('mongodb');
require('dotenv').config();

const app = express();
const port = process.env.PORT || 3000;
const uri = process.env.MONGODB_URI;

app.use(bodyParser.json());

MongoClient.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true }, (err, client) => {
  if (err) throw err;

  const db = client.db("myappdb");
  const usersCollection = db.collection("users");
  const productsCollection = db.collection("products");

  // Create a new user
  app.post('/users', async (req, res) => {
    const newUser = req.body;
    try {
      await usersCollection.insertOne(newUser);
      res.status(201).send(newUser);
    } catch (error) {
      res.status(500).send(error);
    }
  });

  // Get all users
  app.get('/users', async (req, res) => {
    try {
      const users = await usersCollection.find({}).toArray();
      res.status(200).send(users);
    } catch (error) {
      res.status(500).send(error);
    }
  });

  // Modify a user
  app.put('/users/:id', async (req, res) => {
    const id = parseInt(req.params.id);
    try {
      await usersCollection.updateOne({ id }, { $set: req.body });
      res.status(200).send(`Updated user with id ${id}`);
    } catch (error) {
      res.status(500).send(error);
    }
  });

  // Delete a user
  app.delete('/users/:id', async (req, res) => {
    const id = parseInt(req.params.id);
    try {
      await usersCollection.deleteOne({ id });
      res.status(200).send(`Deleted user with id ${id}`);
    } catch (error) {
      res.status(500).send(error);
    }
  });

  app.listen(port, () => {
    console.log(`Server running on port ${port}`);
  });
});
